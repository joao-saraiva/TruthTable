c
insert_row
insert_row[column_index + 3] = '-------'
insert_row[column_index + 2] = solve_expression(operator[1], value1, value2)
insert_row[column_index + 2]
c
insert_index
insert_idex
column_index
insert_row[column_index]
insert_row[column_index] != '-------' && insert_index != 0
insert_row
c
insert_row
insert_row[column_index]
insert_row[column_index] != '-------' && insert_index != 0
c
insert_row[column_index] != '-------' && insert_index != 0
insert_row[column_index]
c
row[variable_index + 3][variable_index + 3]
c
row[variable_index + 2][variable_index + 2]
c
solve_expression(operator[1], value1, value2)
c
solve_expression(operator[1], value1, value2)
second_variables_valeus[variable_index]
first_variables_valeus[variable_index]
value2
value1
c
solve_expression(operator[1], first_variables_valeus[variable_index], second_variables_valeus[variable_index])
operator[1]
c
solve_expression(operator[1], first_variables_valeus[variable_index], second_variables_valeus[variable_index])
row[variable_index + 2][variable_index + 2] = solve_expression(operator[0], first_variables_valeus[variable_index], second_variables_valeus[variable_index])
 row[variable_index + 2][variable_index + 2]
c
second_variables_valeus
 first_variables_valeus
c
rows.size
variable_row == variables[1]
c
second_variables_valeus
first_variables_valeus
c
rows.size
ap rows.size
current_value != '-------'
c
current_value != '-------'
rows[internal_row_index][internal_column_index].split('').reject { |v| v == ' ' || v == '|'}.join('')
rows[internal_row_index][internal_column_index]
c
rows[internal_row_index][internal_column_index]
rows[internal_row_index]
c
variables[0]
variable_row
c
first_variables_valeus
c
variables
operator
c
sentence.split('').reject { |v| v == ' ' || v == '|'}.join('')
sentence
row[3]
row
row[0][7]
row[0].size
row[0]
(total_rows(total_variables.size) + 2) * 2
c
operator
variables
c
column
variables
operator
c
total_drew_variables
c
current_leter
c
current_leter
true_counter
c
current_leter
current_letter
true_counter
c
new_rows.size
c
rows.size
rows
c
rows
c
new_row
index
new_row
c
index
new_row
c
index
new_row
c
new_row
rows[index]
index
c
rows[index]
rows_index[0]
index
new_row
c
new_row
c
rows[0].push(1)
rows
ap rows
c
new_rows
c
new_rows
